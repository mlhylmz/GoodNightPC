<UserControl x:Class="GoodNightPC.UI.Modules.MainModule.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:hc="https://handyorg.github.io/handycontrol"
             xmlns:cal="http://caliburnmicro.com"
             xmlns:local="clr-namespace:GoodNightPC.UI.Modules.MainModule"
             mc:Ignorable="d" Background="White"
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.Resources>
            <Style x:Key="ModeToggleStyle" TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                <Setter Property="Content" Value=""/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Width" Value="180"/>
                <Setter Property="Height" Value="40"/>
                <Setter Property="Margin" Value="10 0 0 0"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Cursor" Value="Hand"/>
                <EventSetter Event="Checked" Handler="ToggleButton_Checked"/>
            </Style>
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!--TITLE-->
        <Grid Grid.Row="0" Height="50" Visibility="Collapsed">
            <TextBlock Text="Good Night PC" VerticalAlignment="Center" FontSize="20" FontFamily="Coolvetica"/>
        </Grid>

        <!--MAIN-->
        <Grid Grid.Row="1" >
            <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch">
                <StackPanel Orientation="Horizontal" Margin="0 10 0 0" HorizontalAlignment="Center">

                    <!--SHUTDOWN TOGGLE-->
                    <ToggleButton x:Name="ShutdownToggleButton" Margin="0" IsChecked="{Binding ShutdownIsChecked, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}">
                        <ToggleButton.Style>
                            <Style  TargetType="ToggleButton" BasedOn="{StaticResource ModeToggleStyle}">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Image Source="../../Resources/Icons/shutdown.png" RenderOptions.BitmapScalingMode="HighQuality" Margin="0 5"/>
                                                <TextBlock Margin="5 0 0 0" Text="Shutdown" Foreground="Red" FontSize="20" VerticalAlignment="Center"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>

                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="Red"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>

                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image Source="../../Resources/Icons/shutdown-white.png" RenderOptions.BitmapScalingMode="HighQuality" Margin="0 5"/>
                                                        <TextBlock Margin="5 0 0 0" Text="Shutdown" Foreground="White" FontSize="20" VerticalAlignment="Center"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>

                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>

                    <!--HIBERNATE TOGGLE-->
                    <ToggleButton x:Name="HibernateToggleButton" IsChecked="{Binding HibernateIsChecked, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}">
                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton" BasedOn="{StaticResource ModeToggleStyle}">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Image Source="../../Resources/Icons/hibernate.png" RenderOptions.BitmapScalingMode="HighQuality" Margin="0 3"/>
                                                <TextBlock Margin="5 0 0 0" Text="Hibernate" Foreground="DodgerBlue" FontSize="20" VerticalAlignment="Center"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>

                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="DodgerBlue"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>

                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image Source="../../Resources/Icons/hibernate-white.png" RenderOptions.BitmapScalingMode="HighQuality" Margin="0 3"/>
                                                        <TextBlock Margin="5 0 0 0" Text="Hibernate" Foreground="White" FontSize="20" VerticalAlignment="Center"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>

                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>

                    <!--RESTART TOGGLE-->
                    <ToggleButton x:Name="RestartToggleButton" IsChecked="{Binding RestartIsChecked, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}">

                        <ToggleButton.Style>
                            <Style TargetType="ToggleButton" BasedOn="{StaticResource ModeToggleStyle}">
                                <Setter Property="ContentTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Image Source="../../Resources/Icons/restart.png" RenderOptions.BitmapScalingMode="HighQuality" Margin="0 3"/>
                                                <TextBlock Margin="5 0 0 0" Text="Restart" Foreground="#666666" FontSize="20" VerticalAlignment="Center"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>

                                <Style.Triggers>
                                    <Trigger Property="IsChecked" Value="True">
                                        <Setter Property="Background" Value="#666666"/>
                                        <Setter Property="BorderBrush" Value="Transparent"/>

                                        <Setter Property="ContentTemplate">
                                            <Setter.Value>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image Source="../../Resources/Icons/restart-white.png" RenderOptions.BitmapScalingMode="HighQuality" Margin="0 3"/>
                                                        <TextBlock Margin="5 0 0 0" Text="Restart" Foreground="White" FontSize="20" VerticalAlignment="Center"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>

                            </Style>
                        </ToggleButton.Style>

                    </ToggleButton>

                </StackPanel>

                <Grid Background="LightGray" HorizontalAlignment="Stretch" Height="1" Margin="20 10"/>

                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">

                    <!--DURATION-->
                    <StackPanel Orientation="Horizontal" Margin="0 0 0 0">
                        <RadioButton x:Name="DurationRadioButton" GroupName="TimeGroup" IsChecked="{Binding DurationModeChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <StackPanel Orientation="Vertical" Margin="10 0 0 0">
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <DataTrigger  Binding="{Binding IsChecked, ElementName=DurationRadioButton}" Value="True">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <TextBlock Text="Duration"/>
                            <StackPanel Orientation="Horizontal">
                                <TextBox Width="100" Text="{Binding TimeDuration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" PreviewTextInput="TextBox_PreviewTextInput"/>
                                <ComboBox SelectedIndex="0" SelectedItem="{Binding SelectedTimeUnit}" ItemsSource="{Binding TimeUnits}"/>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>

                    <!--TIME PICKER-->
                    <StackPanel Orientation="Horizontal" Margin="20 0 0 0">

                        <RadioButton x:Name="DateTimeRadioButton" GroupName="TimeGroup" IsChecked="{Binding DateTimeModeChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <StackPanel Orientation="Vertical" Margin="10 0 0 0">
                            <StackPanel.Style>
                                <Style TargetType="StackPanel">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Style.Triggers>
                                        <DataTrigger  Binding="{Binding IsChecked, ElementName=DateTimeRadioButton}" Value="True">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </StackPanel.Style>
                            <TextBlock Text="Date &amp; Time"/>
                            <StackPanel Orientation="Horizontal">
                                <hc:DateTimePicker Width="200"  x:Name="DateTimeElement" SelectedDateTime="{Binding SelectedDateTime, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>

                        </StackPanel>
                    </StackPanel>

                </StackPanel>


                <!--<hc:FlipClock x:Name="Flipp" DisplayTime="{Binding CountDownTimer}"/>-->

            </StackPanel>

            <StackPanel Margin="0 0 20 0" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Setter Property="Visibility" Value="Hidden"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsTimerWorking}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </StackPanel.Style>
                
                <Image Source="../../Resources/Icons/timer.png" Width="50" Margin="0 5 10 0" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="HighQuality"/>
                <TextBlock Foreground="DodgerBlue" Width="150" Text="{Binding CountDownTimer, StringFormat={}{0:hh\\:mm\\:ss}}" FontWeight="Light" FontSize="40" VerticalAlignment="Center"/>
            </StackPanel>
        </Grid>


        <Grid Grid.Row="2">
            <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch">
                <Grid Background="LightGray" HorizontalAlignment="Stretch" Height="1" Margin="20 10"/>
                <StackPanel Orientation="Horizontal"  HorizontalAlignment="Right">

                    <Button Content="Stop Timer" cal:Message.Attach="StopTimerButton()" HorizontalAlignment="Right" Width="100" Margin="0 10 10 10"/>
                    <Button Content="Start Timer" cal:Message.Attach="StartTimerButton()" HorizontalAlignment="Right" Width="100" Margin="0 10 10 10"/>
                </StackPanel>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
